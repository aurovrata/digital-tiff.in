<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>menu Archives - Tiffin Consulting</title>
	<atom:link href="/tag/menu/feed/" rel="self" type="application/rss+xml" />
	<link>/tag/menu/</link>
	<description>digital business transformation</description>
	<lastBuildDate>Sat, 10 Feb 2024 08:50:23 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.7.1</generator>

<image>
	<url>/wp-content/uploads/2024/02/cropped-tiffin-icon-1-150x150.png</url>
	<title>menu Archives - Tiffin Consulting</title>
	<link>/tag/menu/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Dynamic Menus</title>
		<link>/dynamic-menus/</link>
		
		<dc:creator><![CDATA[Aurovrata V.]]></dc:creator>
		<pubDate>Fri, 26 Sep 2014 05:21:55 +0000</pubDate>
				<category><![CDATA[Menus]]></category>
		<category><![CDATA[Theme Reviews]]></category>
		<category><![CDATA[menu]]></category>
		<category><![CDATA[walker]]></category>
		<guid isPermaLink="false">http://localhost/syllogic/wp/?p=188</guid>

					<description><![CDATA[<p>There are many good tutorials to build custom menus for logged in/logged out users, see also our own post on the ajax login menu. &#160;There are more complex approaches in order to customise the individual menu items using a the wordpress Walker class. &#160;An excellent review of a custom walker can be found on the [&#8230;]</p>
<p>The post <a href="/dynamic-menus/">Dynamic Menus</a> appeared first on <a href="/">Tiffin Consulting</a>.</p>
]]></description>
										<content:encoded><![CDATA[
<p>There are many good tutorials to build custom menus for logged in/logged out users, see also our own post on the <a href="http://localhost/syllogic/wp/2014/05/wordpress-log-in-log-out-menus/">ajax login menu</a>. &nbsp;There are more complex approaches in order to <a href="http://www.kriesi.at/archives/improve-your-wordpress-navigation-menu-output" target="_blank" rel="noopener">customise the individual menu items</a> using a the <a href="http://codex.wordpress.org/Class_Reference/Walker" target="_blank" rel="noopener">wordpress Walker class</a>. &nbsp;An excellent <a href="http://wordpress.stackexchange.com/questions/14037/menu-items-description-custom-walker-for-wp-nav-menu/14039#14039" target="_blank" rel="noopener">review of a custom walker</a> can be found on the <a href="http://wordpress.stackexchange.com/" target="_blank" rel="noopener">WordPress StackExchange</a>.</p>



<p>However, I was looking to actually add menu items dynamically depending on the state of the site. &nbsp;In this case, we have a client, a research centre at a university who asked us to redevelop their site as&nbsp;a portal of all their conference sites. &nbsp;We created a WordPress MU portal which we customised to enable them to create new conference sites based on a template site that is pre-configured, enabling registration forms, abstract submission forms, payment gateways to be created for each new conference at the press of a button in the Dashboard.</p>



<p>One of the challenges was to dynamically add new conference sites to the main site menu as when they are created. &nbsp;Furthermore, the conference menu has a Past sub-menu in which old conferences need to be listed.</p>



<p>I decided to use the Walker extension solution by adding a little customisation.  I created a new class, <code>AddExtraMenuItems_Walker</code>, which extends the WordPress core  <a href="https://core.trac.wordpress.org/browser/tags/4.0/src//wp-includes/nav-menu-template.php#L0" target="_blank" rel="noopener">Walker_Nav_Menu class</a>.</p>



<details class="wp-block-details is-layout-flow wp-block-details-is-layout-flow"><summary>Full code</summary>
<pre class="wp-block-code"><code lang="php" class="language-php line-numbers">/**
 * Walker Navigation Menu class to insert dynamic content into menus
 * use the constructor at creation to pass the dynamic menu content
 */
class AddExtraMenuItems_Walker extends Walker_Nav_Menu{
 public $insertMenus = array();
 protected $nextMenu = '';
 /**
 * Constructor takes an array
 *
 *@param array $menu_insert an array of key=>value pairs with
 *each key being the parent menu underwhich to insert the extra menu items,
 *and the value being an array containing menu items as array values of the following form,
 *array( 'url' => permalink for the menu item (default ='#'),
 * 'title' => menu title (default = '&lt;i> Missing Title&lt;/i>'),
 * 'id' => css id value for the &lt;li> term (default = ''),
 * 'class' => ',' delimited string of css classes for the &lt;li> term (default='') ), each
 *menu will be wrapped in &lt;a> tags that will open in a new window. 
 */
 function __construct($menu_insert = array()) {
   $this->insertMenus = $menu_insert;
 } 
 
 function start_el( &amp;$output, $item, $depth = 0, $args = array(), $id = 0 ) {
   $menu_item = apply_filters( 'the_title', $item->title, $item->ID );
   if(array_key_exists($menu_item,$this->insertMenus)){
     //check if to be listed or inserted as sub-menu
     $menuTree = $this->insertMenus[$menu_item];
     $subMenu = ! empty($menuTree['sub-menu']) ? true:false;
     /*
     *if this is a sub-mneu insert, ;let's make sure our current
     *menu-item has the required class to identify it as such
     */
     if($subMenu &amp;&amp; ! empty($menuTree['class'])) $item->classes[]=$menuTree['class'];
       //call parent function
       parent::start_el($output, $item, $depth, $args);
       //now if we have a sub-menu tree we need to insert it here
       if($subMenu){
          $classes = ! empty($menuTree['ul-class']) ? ' class="'.$menuTree['class'].'"' : ' class="sub-menu"';
          $output .= '&lt;ul'.$class.'>';
          foreach($menuTree['sub-menu'] as $menu_item){
            $classes = ! empty($menu_item['class']) ? '" class="'.$menu_item['class'].'"' : '';
            $id = ! empty($menu_item['id']) ? ' id="'.$menu_item['id'].'"' : '';
            $url =! empty($menu_item['url']) ? $menu_item['url'] : '#';
             $title=! empty($menu_item['title']) ? $menu_item['title'] : '&lt;i>Missing Title&lt;/i>';
             $output .= '&lt;li'.$id.$classes.'>&lt;a href="'.$url.'" target="_blank">'.$title.'&lt;/a>&lt;/li>';
          }
          $output .= '&lt;/ul>'; //let's close our sub-menu
       }else $this->nextMenu = $menuTree; //else we pass the menu items to be inserted as list items in the start call
   }else parent::start_el($output, $item, $depth, $arg);
 }
 
 function start_lvl( &amp;$output, $depth = 0, $args = array()) {
   parent::start_lvl($output, $depth, $args);
   if($this->nextMenu){
     foreach($this->nextMenu as $menu_item){
       $classes = ! empty($menu_item['class']) ? '" class="'.$menu_item['class'].'"' : '';
       $id = ! empty($menu_item['id']) ? ' id="'.$menu_item['id'].'"' : '';
       $url =! empty($menu_item['url']) ? $menu_item['url'] : '#';
       $title=! empty($menu_item['title']) ? $menu_item['title'] : '&lt;i>Missing Title&lt;/i>';
       $output .= '&lt;li'.$id.$classes.'>&lt;a href="'.$url.'" target="_blank">'.$title.'&lt;/a>&lt;/li>';
     }
   $this->nextMenu=''; //reset
   }
 }
 
}</code></pre>
</details>



<p>So the Walker class is simply called in the wordpress function to display a menu structure,</p>



<pre class="wp-block-code"><code lang="php" class="language-php">wp_nav_menu( array('walker'=&gt; new AddExtraMenuItems_Walker($extra_menu), 'theme_location' =&gt; 'primary-menu', 'container' =&gt; '', 'fallback_cb' =&gt; '', 'menu_class' =&gt; 'my-menu-class', 'menu_id' =&gt; 'top-menu', 'echo' =&gt; false ) );</code></pre>



<p>Remains to define the $extra_menu array arguments that are passed to the walker in order to insert it into the right menu. Here is an example. It assumes that there is a primary menu created in the Dashboard with the top level menu item &#8216;Conferences&#8217; and a sub-item below this called &#8216;Past&#8217;,</p>



<pre class="wp-block-code"><code lang="php" class="language-php line-numbers">$extra_menu = array(
 'Conferences'=&gt;array(array('title'=&gt;'ISOl 2015',
                               'url' =&gt; 'http://syllogic.asia/2015/',
                               'id' =&gt; 'menu_item_isol_2',
                               'class'=&gt; 'menu-item menu-item-type-custom menu-item-object-custom'),
                         array('title'=&gt;'ISOl Chicago',
                               'url' =&gt; 'http://syllogic.asia/2015/',
                               'id' =&gt; 'menu_item_isol_3',
                               'class'=&gt; 'menu-item menu-item-type-custom menu-item-object-custom')),
 'Past'=&gt;array('ul-class'=&gt;'sub-menu',
                  'class'=&gt;'menu-item-has-children left-sub-menu',
                  'sub-menu'=&gt;array(array('title'=&gt;'ISOl 2015',
                                             'url' =&gt; 'http://syllogic.asia/2015/',
                                             'id' =&gt; 'menu_item_isol_2',
                                             'class'=&gt; 'menu-item menu-item-type-custom menu-item-object-custom'),
                                       array('title'=&gt;'ISOl Chicago',
                                             'url' =&gt; 'http://syllogic.asia/2015/',
                                             'id' =&gt; 'menu_item_isol_3',
                                             'class'=&gt; 'menu-item menu-item-type-custom menu-item-object-custom'))));</code></pre>



<p>There is 2 type of menu being inserted here, the first one under &#8216;Conferences&#8217; menu item, are 2 extra sub-item which are simply listed within the existing sub-menu list of &#8216;Conferences&#8217;.<br>
The second set of menu is an entire sub-menu structure being replaced instead of an existing menu-item. In other words, &#8216;Past&#8217; is a sub-item of top menu item &#8216;Conferences&#8217;. As such &#8216;Past&#8217; does not have any children. This 2nd set of dynamic menu are placed below the &#8216;Past&#8217;, making it into a sub-menu.</p>



<p>Menu structures are dined as an array with,</p>



<pre class="wp-block-code"><code lang="php" class="language-php">array('title'=&gt;<em>the text of the menu item</em>,
      'url' =&gt; <em>the permalink for the menu</em>,
      'id' =&gt; <em>a css id for the &lt;li&gt; element</em>,
      'class'=&gt; <em>css classes for the &lt;li&gt; element</em>)</code></pre>



<p>To add an entire sub-menu to a given item, you need to specify some extra arguments, namely the classes that changes an item into a sub-menu (on hover the sub-menu will appear) if you are using pure CSS for your menus. This is done using the following structure,</p>



<pre class="wp-block-code"><code lang="php" class="language-php">array('ul-class'=&gt;<em>the css class for the sub-menu </em><ul><em> element</em>,
      'class'=&gt;<em>the css class for the menu item that will change to a sub-menu structure</em>,
      'sub-menu'=&gt;array( <em> sub-menu items as arrays, as defined above</em> )</ul></code></pre>



<p>That&#8217;s it.  Feel free to comment, query, clarify below&#8230;</p>
<p>The post <a href="/dynamic-menus/">Dynamic Menus</a> appeared first on <a href="/">Tiffin Consulting</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
